terraform {
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "=2.97.0"
    }
  }
}
provider "azurerm" {
  features {}
}

resource "azurerm_resource_group" "NATresourceGroup" {
  name     = "resourceNAT"
  location = "West Europe "
}

# VIRTUAL NETWORK
resource "azurerm_virtual_network" "myVnet" {
  name                = "nat_vnet"
  address_space       = ["10.1.0.0/16"]
  location            = azurerm_resource_group.NATresourceGroup.location
  resource_group_name = azurerm_resource_group.NATresourceGroup.name

  tags = {
    enviornment = "Demo"
  }
}

resource "azurerm_subnet" "mySubnet" {
  name                 = "mySubnet"
  resource_group_name  = azurerm_resource_group.NATresourceGroup.name
  virtual_network_name = azurerm_virtual_network.myVnet.name
  address_prefixes     = ["10.1.0.0/24"]
}

# AZURE BASTION HOST
resource "azurerm_subnet" "AzureBastionSubnet" {
  name                 = "AzureBastionSubnet"
  resource_group_name  = azurerm_resource_group.NATresourceGroup.name
  virtual_network_name = azurerm_virtual_network.myVnet.name
  address_prefixes     = ["10.1.1.0/24"]
}

resource "azurerm_public_ip" "myBastionIP" {
  name                = "myBastionIP"
  location            = azurerm_resource_group.NATresourceGroup.location
  resource_group_name = azurerm_resource_group.NATresourceGroup.name
  allocation_method   = "Static"
  sku                 = "Standard"
}

resource "azurerm_bastion_host" "myBastionHost" {
  name                = "BastionHost"
  location            = azurerm_resource_group.NATresourceGroup.location
  resource_group_name = azurerm_resource_group.NATresourceGroup.name

  ip_configuration {
    name                 = "configuration"
    subnet_id            = azurerm_subnet.AzureBastionSubnet.id
    public_ip_address_id = azurerm_public_ip.myBastionIP.id
  }
}



resource "azurerm_network_security_group" "NSGroup" {
  name                = "example-nsg"
  location            = azurerm_resource_group.NATresourceGroup.location
  resource_group_name = azurerm_resource_group.NATresourceGroup.name

  security_rule {
    name                       = "test123"
    priority                   = 100
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "*"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
  }
}

resource "azurerm_subnet_network_security_group_association" "NSGid" {
  subnet_id                 = azurerm_subnet.mySubnet.id
  network_security_group_id = azurerm_network_security_group.NSGroup.id
}

resource "azurerm_public_ip" "MyPIP" {
  name                = "nat-gateway-publicIP"
  location            = azurerm_resource_group.NATresourceGroup.location
  resource_group_name = azurerm_resource_group.NATresourceGroup.name
  allocation_method   = "Static"
  sku                 = "Standard"
}


resource "azurerm_public_ip_prefix" "MyPIPrefix" {
  name                = "nat-gateway-publicIPPrefix"
  location            = azurerm_resource_group.NATresourceGroup.location
  resource_group_name = azurerm_resource_group.NATresourceGroup.name
  prefix_length       = 30
}

resource "azurerm_nat_gateway" "Nat_Gateway" {
  name                    = "nat-Gateway"
  location                = azurerm_resource_group.NATresourceGroup.location
  resource_group_name     = azurerm_resource_group.NATresourceGroup.name
  public_ip_address_ids   = [azurerm_public_ip.MyPIP.id]
  public_ip_prefix_ids    = [azurerm_public_ip_prefix.MyPIPrefix.id]
  sku_name                = "Standard"
  idle_timeout_in_minutes = 10
  zones =["1"]
}

resource "azurerm_subnet_nat_gateway_association" "example" {
  subnet_id      = azurerm_subnet.mySubnet.id
  nat_gateway_id = azurerm_nat_gateway.Nat_Gateway.id
}


resource "azurerm_network_interface" "NICard" {
  name                = "NICcard"
  location            = azurerm_resource_group.NATresourceGroup.location
  resource_group_name = azurerm_resource_group.NATresourceGroup.name

  ip_configuration {
    name                          = "testconfiguration1"
    subnet_id                     = azurerm_subnet.mySubnet.id
    private_ip_address_allocation = "Dynamic"
  }
}

 

resource "azurerm_virtual_machine" "TestVM" {
  name                  = "TestVM"
  location              = azurerm_resource_group.NATresourceGroup.location
  resource_group_name   = azurerm_resource_group.NATresourceGroup.name
  vm_size               = "Standard_D2_v3"
  network_interface_ids = [azurerm_network_interface.NICard.id]

 
  storage_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "16.04-LTS"
    version   = "Latest"
  }
  storage_os_disk {
    name              = "myosdisk1"
    caching           = "ReadWrite"
    create_option     = "FromImage"
    managed_disk_type = "Standard_LRS"
  }
  os_profile {
    computer_name  = "hostname"
    admin_username = "testadmin"
    admin_password = "Password1234!"
  }
  os_profile_linux_config {
    disable_password_authentication = false
  }
  tags = {
    environment = "staging"
  }
}

resource "azurerm_route_table" "routetable" {
  name                          = "ROUTETABLE"
  location                      = azurerm_resource_group.NATresourceGroup.location
  resource_group_name           = azurerm_resource_group.NATresourceGroup.name
  disable_bgp_route_propagation = false

  route {
    name           = "route1"
    address_prefix = "10.1.0.0/16"
    next_hop_type  = "vnetlocal"
  }

  tags = {
    environment = "Production"
  }
}

